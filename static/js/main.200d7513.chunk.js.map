{"version":3,"sources":["components/Socialicons.js","components/Header.js","components/BackgroundLines.js","components/Layout.js","pages/Home.js","components/Sectiontitle.js","pages/Contact.js","pages/Notfound.js","App.js","data/mock.js","data/db/database.js","data/index.js","serviceWorker.js","index.js"],"names":["Socialicons","props","useState","socialLinks","setSocialLinks","useEffect","axios","get","then","response","data","className","bordered","facebook","rel","target","href","name","twitter","pinterest","behance","linkedin","dribbble","github","Header","information","setInformation","navigationToggler","setNavigationToggler","onClick","to","src","brandImage","alt","exact","Date","getFullYear","BackgroundLines","Layout","children","Home","params","particles","number","value","density","enable","color","opacity","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","aboutContent","Sectiontitle","title","Contact","phoneNumbers","setPhoneNumbers","emailAddress","setEmailAddress","address","setAddress","email","subject","message","formdata","setFormdata","error","setError","setMessage","handleChange","event","currentTarget","action","onSubmit","preventDefault","htmlFor","onChange","type","id","cols","rows","map","phoneNumber","key","Notfound","App","path","component","Mock","require","database","age","phone","nationality","language","freelanceStatus","aboutImage","aboutImageLg","cvfile","contactInfo","onGet","reply","config","services","reviews","skills","portfolios","experience","blogs","onAny","passThrough","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.200d7513.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport LineIcon from \"react-lineicons\";\r\n\r\nfunction Socialicons(props) {\r\n  const [socialLinks, setSocialLinks] = useState({});\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/information\").then((response) => {\r\n      setSocialLinks(response.data.socialLinks);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <ul\r\n      className={\r\n        props.bordered\r\n          ? \"mi-socialicons mi-socialicons-bordered\"\r\n          : \"mi-socialicons\"\r\n      }\r\n    >\r\n      {!socialLinks.facebook ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.facebook}\r\n          >\r\n            <LineIcon name=\"facebook\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.twitter ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.twitter}\r\n          >\r\n            <LineIcon name=\"twitter\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.pinterest ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.pinterest}\r\n          >\r\n            <LineIcon name=\"pinterest\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.behance ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.behance}\r\n          >\r\n            <LineIcon name=\"behance\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.linkedin ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.linkedin}\r\n          >\r\n            <LineIcon name=\"linkedin\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.dribbble ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.dribbble}\r\n          >\r\n            <LineIcon name=\"dribbble\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n      {!socialLinks.github ? null : (\r\n        <li>\r\n          <a\r\n            rel=\"noopener noreferrer\"\r\n            target=\"_blank\"\r\n            href={socialLinks.github}\r\n          >\r\n            <LineIcon name=\"github\" />\r\n          </a>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Socialicons;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport LineIcon from \"react-lineicons\";\r\n\r\nfunction Header() {\r\n  const [information, setInformation] = useState(\"\");\r\n  const [navigationToggler, setNavigationToggler] = useState(false);\r\n\r\n  const handleNavigationToggler = () => {\r\n    setNavigationToggler(!navigationToggler);\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/information\").then((response) => {\r\n      setInformation(response.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <nav className={navigationToggler ? \"mi-header is-visible\" : \"mi-header\"}>\r\n      <button onClick={handleNavigationToggler} className=\"mi-header-toggler\">\r\n        {!navigationToggler ? (\r\n          <LineIcon name=\"menu\" />\r\n        ) : (\r\n          <LineIcon name=\"close\" />\r\n        )}\r\n      </button>\r\n      <div className=\"mi-header-inner\">\r\n        <div className=\"mi-header-image\">\r\n          <Link to=\"/\">\r\n            <img src={information.brandImage} alt=\"brandimage\" />\r\n          </Link>\r\n        </div>\r\n\r\n        <ul className=\"mi-header-menu\">\r\n          <li>\r\n            <NavLink exact to=\"/\">\r\n              <span>Home</span>\r\n            </NavLink>\r\n            <li>\r\n              <NavLink to=\"/contact\">\r\n                <span>Contact</span>\r\n              </NavLink>\r\n            </li>\r\n          </li>\r\n        </ul>\r\n        <p className=\"mi-header-copyright\">\r\n          &copy; {new Date().getFullYear()}{\" \"}\r\n          <b>\r\n            <a\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n              href=\"https://admir4l.ir\"\r\n            >\r\n              Admir4l\r\n            </a>\r\n          </b>\r\n        </p>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nfunction BackgroundLines(props) {\r\n  return (\r\n    <div className=\"mi-bglines\">\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n      <span></span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BackgroundLines;\r\n","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport BackgroundLines from \"../components/BackgroundLines\";\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <div className=\"mi-wrapper\">\r\n      <BackgroundLines />\r\n      <Header />\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Particles from \"react-particles-js\";\r\nimport Socialicons from \"../components/Socialicons\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nfunction Home() {\r\n  const [information, setInformation] = useState(\"\");\r\n  const paramConfig = {\r\n    particles: {\r\n      number: {\r\n        value: 160,\r\n        density: {\r\n          enable: false,\r\n        },\r\n      },\r\n      color: {\r\n        value: \"#ffffff\",\r\n      },\r\n      opacity: {\r\n        value: 0.1,\r\n      },\r\n      size: {\r\n        value: 5,\r\n        random: true,\r\n        anim: {\r\n          speed: 4,\r\n          size_min: 0.3,\r\n        },\r\n      },\r\n      line_linked: {\r\n        enable: false,\r\n      },\r\n      move: {\r\n        random: true,\r\n        speed: 1,\r\n        direction: \"top\",\r\n        out_mode: \"out\",\r\n      },\r\n    },\r\n  };\r\n  useEffect(() => {\r\n    axios.get(\"/api/information\").then((response) => {\r\n      setInformation(response.data);\r\n    });\r\n  }, []);\r\n  return (\r\n    <Layout>\r\n      <div className=\"mi-home-area mi-padding-section\">\r\n        <Particles className=\"mi-home-particle\" params={paramConfig} />\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-11 col-12\">\r\n              <div className=\"mi-home-content\">\r\n                <h1>\r\n                  Hi, I am{\" \"}\r\n                  <span className=\"color-theme\">{information.name}</span>\r\n                </h1>\r\n                <p>{information.aboutContent}</p>\r\n                <Socialicons bordered />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nfunction Sectiontitle(props) {\r\n  return (\r\n    <div className=\"mi-sectiontitle\">\r\n      <h2>{props.title}</h2>\r\n      <span>{props.title}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sectiontitle;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport * as Icon from \"react-feather\";\r\nimport Sectiontitle from \"../components/Sectiontitle\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nfunction Contact() {\r\n  const [phoneNumbers, setPhoneNumbers] = useState([]);\r\n  const [emailAddress, setEmailAddress] = useState([]);\r\n  const [address, setAddress] = useState([]);\r\n  const [formdata, setFormdata] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n  const [error, setError] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    if (!formdata.name) {\r\n      setError(true);\r\n      setMessage(\"Name is required\");\r\n    } else if (!formdata.email) {\r\n      setError(true);\r\n      setMessage(\"Email is required\");\r\n    } else if (!formdata.subject) {\r\n      setError(true);\r\n      setMessage(\"Subject is required\");\r\n    } else if (!formdata.message) {\r\n      setError(true);\r\n      setMessage(\"Message is required\");\r\n    } else {\r\n      setError(false);\r\n      setMessage(\"You message has been sent!!!\");\r\n    }\r\n  };\r\n  const handleChange = (event) => {\r\n    setFormdata({\r\n      ...formdata,\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  const numberFormatter = (number) => {\r\n    const phnNumber = number;\r\n    return phnNumber;\r\n  };\r\n\r\n  const handleAlerts = () => {\r\n    if (error && message) {\r\n      return <div className=\"alert alert-danger mt-4\">{message}</div>;\r\n    } else if (!error && message) {\r\n      return <div className=\"alert alert-success mt-4\">{message}</div>;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios.get(\"/api/contactinfo\").then((response) => {\r\n      setPhoneNumbers(response.data.phoneNumbers);\r\n      setEmailAddress(response.data.emailAddress);\r\n      setAddress(response.data.address);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"mi-contact-area mi-section mi-padding-top mi-padding-bottom\">\r\n        <div className=\"container\">\r\n          <Sectiontitle title=\"Contact Me\" />\r\n          <div className=\"row\">\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"mi-contact-formwrapper\">\r\n                <h4>Get In Touch</h4>\r\n                <form\r\n                  action=\"#\"\r\n                  className=\"mi-form mi-contact-form\"\r\n                  onSubmit={submitHandler}\r\n                >\r\n                  <div className=\"mi-form-field\">\r\n                    <label htmlFor=\"contact-form-name\">Enter your name*</label>\r\n                    <input\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"contact-form-name\"\r\n                      value={formdata.name}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mi-form-field\">\r\n                    <label htmlFor=\"contact-form-email\">\r\n                      Enter your email*\r\n                    </label>\r\n                    <input\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                      name=\"email\"\r\n                      id=\"contact-form-email\"\r\n                      value={formdata.email}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mi-form-field\">\r\n                    <label htmlFor=\"contact-form-subject\">\r\n                      Enter your subject*\r\n                    </label>\r\n                    <input\r\n                      onChange={handleChange}\r\n                      type=\"text\"\r\n                      name=\"subject\"\r\n                      id=\"contact-form-subject\"\r\n                      value={formdata.subject}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mi-form-field\">\r\n                    <label htmlFor=\"contact-form-message\">\r\n                      Enter your Message*\r\n                    </label>\r\n                    <textarea\r\n                      onChange={handleChange}\r\n                      name=\"message\"\r\n                      id=\"contact-form-message\"\r\n                      cols=\"30\"\r\n                      rows=\"6\"\r\n                      value={formdata.message}\r\n                    ></textarea>\r\n                  </div>\r\n                  <div className=\"mi-form-field\">\r\n                    <button className=\"mi-button\" type=\"submit\">\r\n                      Send Mail\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n                {handleAlerts()}\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-6\">\r\n              <div className=\"mi-contact-info\">\r\n                {!phoneNumbers ? null : (\r\n                  <div className=\"mi-contact-infoblock\">\r\n                    <span className=\"mi-contact-infoblock-icon\">\r\n                      <Icon.Phone />\r\n                    </span>\r\n                    <div className=\"mi-contact-infoblock-content\">\r\n                      <h6>Phone</h6>\r\n                      {phoneNumbers.map((phoneNumber) => (\r\n                        <p key={phoneNumber}>\r\n                          <a href={numberFormatter(phoneNumber)}>\r\n                            {phoneNumber}\r\n                          </a>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {!emailAddress ? null : (\r\n                  <div className=\"mi-contact-infoblock\">\r\n                    <span className=\"mi-contact-infoblock-icon\">\r\n                      <Icon.Mail />\r\n                    </span>\r\n                    <div className=\"mi-contact-infoblock-content\">\r\n                      <h6>Email</h6>\r\n                      {emailAddress.map((email) => (\r\n                        <p key={email}>\r\n                          <a href={`mailto:${email}`}>{email}</a>\r\n                        </p>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                {!phoneNumbers ? null : (\r\n                  <div className=\"mi-contact-infoblock\">\r\n                    <span className=\"mi-contact-infoblock-icon\">\r\n                      <Icon.MapPin />\r\n                    </span>\r\n                    <div className=\"mi-contact-infoblock-content\">\r\n                      <h6>Address</h6>\r\n                      <p>{address}</p>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../components/Layout\";\r\n\r\nfunction Notfound() {\r\n  return (\r\n    <Layout>\r\n      <div className=\"mi-about-area mi-section\">\r\n        <div className=\"container\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-lg-8\">\r\n              <div className=\"notfound\">\r\n                <div className=\"notfound-inner text-center\">\r\n                  <h1>404</h1>\r\n                  <h3>Whoops!!! Page not found!</h3>\r\n                  <Link to=\"/\" className=\"mi-button\">\r\n                    Back to Home\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\n\r\nexport default Notfound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport \"./App.scss\";\r\nimport Home from \"./pages/Home\";\r\nimport Contact from \"./pages/Contact\";\r\nimport Notfound from \"./pages/Notfound\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/contact\" component={Contact} />\r\n        <Route path=\"*\" component={Notfound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const MockAdapter = require(\"axios-mock-adapter\");\r\nconst axios = require(\"axios\");\r\nconst Mock = new MockAdapter(axios);\r\nexport default Mock;\r\n","import Mock from \"../mock\";\r\n\r\nconst database = {\r\n  information: {\r\n    name: \"Mohammad Babazadeh\",\r\n    aboutContent:\r\n      \"A little member of open source family, some times be a hacker with white hat, some times circuit and robot designer, some times web developer and some times ...\",\r\n    age: 31,\r\n    phone: \"+98 935 772 4481\",\r\n    nationality: \"Iranian\",\r\n    language: \"Turkish, Persian, English\",\r\n    email: \"\",\r\n    address: \"Vanak 5, Dampezeshki Street, Tabriz, Iran\",\r\n    freelanceStatus: \"Available\",\r\n    socialLinks: {\r\n      facebook: \"https://www.facebook.com/admir4l.69/\",\r\n      twitter: \"https://twitter.com/admir4l_69/\",\r\n      pinterest: \"\",\r\n      behance: \"\",\r\n      linkedin: \"https://www.linkedin.com/in/mohammad-babazadeh/\",\r\n      dribbble: \"\",\r\n      github: \"https://github.com/admir4l/\",\r\n    },\r\n    brandImage: \"/images/brand-image.jpg\",\r\n    aboutImage: \"/images/about-image.jpg\",\r\n    aboutImageLg: \"/images/about-image-lg.jpg\",\r\n    cvfile: \"/files/mBabazadeh.pdf\",\r\n  },\r\n  contactInfo: {\r\n    phoneNumbers: [\"+98-935-772-4481\", \"+98-914-255-3350\"],\r\n    emailAddress: [\"info@admir4l.ir\", \"m.babazadeh92@ms.tabrizu.ac.ir\"],\r\n    address: \"Vanak 5, Dampezeshki Street, Tabriz, Iran\",\r\n  },\r\n};\r\n\r\nMock.onGet(\"/api/information\").reply((config) => {\r\n  const response = database.information;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/services\").reply((config) => {\r\n  const response = database.services;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/reviews\").reply((config) => {\r\n  const response = database.reviews;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/skills\").reply((config) => {\r\n  const response = database.skills;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/portfolios\").reply((config) => {\r\n  const response = database.portfolios;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/experience\").reply((config) => {\r\n  const response = database.experience;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/blog\").reply((config) => {\r\n  const response = database.blogs;\r\n  return [200, response];\r\n});\r\n\r\nMock.onGet(\"/api/contactinfo\").reply((config) => {\r\n  const response = database.contactInfo;\r\n  return [200, response];\r\n});\r\n","import Mock from \"./mock\";\r\nimport \"./db/database\";\r\n\r\nMock.onAny().passThrough();\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./data\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}